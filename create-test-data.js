/**
 * Script t·∫°o test data ƒë·ªÉ debug AI functionality
 */

const fetch = require('node-fetch');
const baseUrl = 'http://localhost:3000';

async function createTestData() {
  try {
    console.log('üîß Creating test data for AI functionality...\n');

    // 1. T·∫°o OpenAI Config v·ªõi placeholder key
    console.log('1Ô∏è‚É£ Creating OpenAI Config...');
    const configResponse = await fetch(`${baseUrl}/openai-configs`, {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json',
        'Authorization': 'Bearer demo-token' // Bypass auth for testing
      },
      body: JSON.stringify({
        name: 'Test AI Config',
        description: 'Config for testing',
        model: 'gpt-4o-mini',
        apiKey: 'sk-test-key-for-testing', // Placeholder key
        systemPrompt: 'B·∫°n l√† tr·ª£ l√Ω AI th√¢n thi·ªán c·ªßa c·ª≠a h√†ng. Tr·∫£ l·ªùi ng·∫Øn g·ªçn v√† h·ªØu √≠ch.',
        maxTokens: 150,
        temperature: 0.7,
        scopeType: 'global',
        status: 'active',
        isDefault: true
      })
    });

    if (!configResponse.ok) {
      console.log('‚ùå OpenAI Config creation failed:', await configResponse.text());
      return;
    }
    
    const config = await configResponse.json();
    console.log('‚úÖ OpenAI Config created:', config._id);

    // 2. T·∫°o Fanpage test
    console.log('\n2Ô∏è‚É£ Creating Test Fanpage...');
    const fanpageResponse = await fetch(`${baseUrl}/fanpages`, {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json',
        'Authorization': 'Bearer demo-token'
      },
      body: JSON.stringify({
        pageId: '123456789',
        name: 'Page t·∫°p b√°n h√†ng',
        accessToken: 'test-access-token',
        status: 'active',
        description: 'C·ª≠a h√†ng b√°n ƒë·ªì gia d·ª•ng, ƒëi·ªán t·ª≠, th·ªùi trang. Giao h√†ng to√†n qu·ªëc.',
        greetingScript: 'Ch√†o b·∫°n! C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá. Ch√∫ng t√¥i s·∫Ω h·ªó tr·ª£ b·∫°n ngay.',
        aiEnabled: true,
        openAIConfigId: config._id
      })
    });

    if (!fanpageResponse.ok) {
      console.log('‚ùå Fanpage creation failed:', await fanpageResponse.text());
      return;
    }

    const fanpage = await fanpageResponse.json();
    console.log('‚úÖ Fanpage created:', fanpage._id);

    console.log('\nüéâ Test data created successfully!');
    console.log('üìã Test Details:');
    console.log(`   - PageID: 123456789`);
    console.log(`   - PSID: 24776034528751852`);
    console.log(`   - AI Config: ${config._id}`);
    console.log(`   - Fanpage: ${fanpage._id}`);
    
    console.log('\nüî• Now you can test webhook with:');
    console.log('node test-webhook.js');

  } catch (error) {
    console.error('‚ùå Error creating test data:', error.message);
  }
}

createTestData();